image: dc01w01harbor01.kemenkeu.go.id/vercel-image/1.0:latest

stages:
  - install
  - build
  - deploy

Install Dependencies:
  stage: install
  only:
    - main
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
    untracked: true
    policy: pull-push
  tags:
    - docker
  before_script:
    - node -v && yarn -v
  script:
    - yarn --frozen-lockfile

build website:
  stage: build
  only:
    - main
  tags:
    - docker
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
    untracked: true
    policy: pull
  script:
    - touch .env
    - echo "${ENV_PROD}" > .env
    - cat .env
    - CI=false yarn build
  artifacts:
    paths:
      - ./build
    expire_in: 30 days


.deploy_preview:
  stage: deploy
  except:
    - main
  script:
    - mkdir .vercel && touch .vercel/project.json
    - echo "{\"projectId\":\"$VERCEL_PROJECT_ID\",\"orgId\":\"$VERCEL_SCOPE\"}" > .vercel/project.json 
    - cat .vercel/project.json
    - vercel deploy --yes --token $VERCEL_TOKEN --scope=$VERCEL_SCOPE
  tags:
    - docker

deploy_production:
  stage: deploy
  only:
    - main
  image: dc01w01harbor01.kemenkeu.go.id/vercel-image/1.0:latest
  environment:
    name: production
  script:
    - mkdir .vercel && touch .vercel/project.json
    - echo "{\"projectId\":\"$VERCEL_PROJECT_ID\",\"orgId\":\"$VERCEL_SCOPE\"}" > .vercel/project.json 
    - cat .vercel/project.json
    - vercel deploy --yes --prod --token $VERCEL_TOKEN --scope=$VERCEL_SCOPE
  tags:
    - docker
